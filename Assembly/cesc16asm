#!/bin/bash

TEMP_FILE="temp_file"
DELETE_TEMP_FILE=true

OLD_PWD=$PWD
# Set PWD to the directory of the script
cd "$(dirname "$(readlink -f "$0" || realpath "$0")")"

# Any subsequent commands which fail will cause the shell script to exit immediately
set -e

printerr() { echo "$@" 1>&2; }

UpdateInputFile() {
    INPUT_FILE="$1"
    # If input file is relative path, add the PWD
    if ! [[ "$INPUT_FILE" = /* ]]; then
        INPUT_FILE="$OLD_PWD/$INPUT_FILE"
    fi
    
    if ! [ -f $INPUT_FILE ]; then
        printerr "File \"$1\" not found, aborting..."
        exit 1
    fi
}

Preprocess() {
    if ! [ -f "CESC16.cpu" ]; then
        printerr "CESC16.cpu not found, aborting..."
        exit 1
    fi
    
    if ! [ -d "OS" ]; then
        printerr "OS directory not found, aborting..."
        exit 1
    fi
    
    UpdateInputFile $1
    cpp -x assembler-with-cpp -include CESC16.cpu -nostdinc -isystem OS -CC -undef -P $INPUT_FILE > $TEMP_FILE
}

Assemble() {
    # Check that there is only 1 positional argument
    if [ "$#" -ne 1 ]; then
        printerr "Make sure to specify exactly 1 file to assemble"
        printerr "Specified files: [$@]"
        exit 1
    fi
    
    # Check if tools exist
    if ! [ -f "Tools/hex2bin" ] || ! [ -f "Tools/GenerateSymbols" ]; then
        echo "Tools not found, recompiling..."
        make -C Tools/ -f makefile
        echo ""
    fi
    if ! [ -f "customasm.exe" ]; then
        printerr "customasm.exe not found, aborting..." >&2
        printerr "Go to https://github.com/hlorenzi/customasm/releases and download the latest version of customasm."
        exit 1
    fi
    
    # Run preprocessor
    Preprocess $1

    if [ "$PRINT_RESULT" = true ]; then
        # -p flag used, print result to stdout
        ./customasm.exe $TEMP_FILE --print --quiet

    else
        ./customasm.exe $TEMP_FILE --format logisim16 -o $TEMP_FILE --quiet > /dev/null
        
        # Start at line 2 (remove first line with text "v2.0 raw").
        # This workaround may need to be removed in the future
        tail -n +2 $TEMP_FILE > $OUTPUT_HEX
        
        # echo "Assembled file saved to $OUTPUT_HEX"
    fi
}

Link() {
    # Check that there is only 1 positional argument
    if [ "$#" -ne 1 ]; then
        printerr "Linking multiple files is not supported at the moment."
        printerr "Consider using #include instead."
        exit 1
    fi
    
    # $1 is a HEX file
    UpdateInputFile $1
    
    cp $INPUT_FILE $OUTPUT_HEX
    # echo "Linked file saved to $OUTPUT_HEX"
}

Cleanup() {
    if [ "$DELETE_TEMP_FILE" = true ]; then
        rm -f $TEMP_FILE
    fi
}
trap Cleanup EXIT

PrintHelp() {
    echo "CESC16 Assembler"
    echo "Usage: $0 [options] <file>"
    echo "Options:"
    echo "-h --help: Show this help message"
    echo "-l --link: Link hex files instead of assembling"
    echo "-n --no-bin: Do not create <name>.bin file"
    echo "-o --output <name>: Output hex result to <name> and binary to <name>.bin"
    echo "-p --print: Print the assembled file to stdout. Ignore -o option."
    exit 0
}



# SCRIPT STARTS HERE

if ! [ -f "/usr/bin/cesc16asm" ]; then
    echo "Warning:"
    echo "There is no link to cesc16asm in /usr/bin. I recommend installing it, using:"
    echo "sudo ln -s \$PWD/cesc16asm /bin/cesc16asm"
    echo ""
fi

if [ "$#" -eq 0 ]; then
    PrintHelp
    # PrintHelp will exit the script
fi


# Parse arguments
POSITIONAL_ARGS=()
OUT_FILENAME=$OLD_PWD/out.hex
NO_BIN=false
LINK_FILES=false
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
        PrintHelp
        # PrintHelp will exit the script, no need to shift
        ;;
    -l|--link)
        LINK_FILES=true
        shift # past argument
        ;;
    -n|--no-bin)
        NO_BIN=true
        shift # past argument
        ;;
    -o|--output)
        # Check if output filename is absolute
        if [[ "$2" = /* ]]; then
            OUT_FILENAME=$2
        else
            OUT_FILENAME=$OLD_PWD/$2
        fi
        shift # past argument
        shift # past value
        ;;
    -p|--print)
        PRINT_RESULT=true
        shift # past argument
        ;;
    -*|--*)
        printerr "Unknown option $1"
        exit 1
        ;;
    *)
        POSITIONAL_ARGS+=("$1") # save positional arg
        shift # past argument
        ;;
  esac
done
set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

OUTPUT_HEX=$OUT_FILENAME
OUTPUT_BIN=$OUT_FILENAME.bin

if [ "$LINK_FILES" = false ]; then
    Assemble "$@"
else
    Link "$@"
fi

if [ "$NO_BIN" = false ]; then
    # Convert hex to binary
    Tools/hex2bin $OUTPUT_HEX > $OUTPUT_BIN
    # echo "Binary file saved to $OUTPUT_BIN"
fi